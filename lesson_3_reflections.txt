When would you want to create a remote repository rather than keeping all your work local? 
	
	when you need a remote backup and when you need to collaborate

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	network connectivity + you don't want the ground changing under you without you knowing it

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	forks - splitting off from something you don't control
	branch - splitting off from something you do control
	clones - making a manually-controlled mirror

What is the benefit of having a copy of the last known state of the remote stored locally?

	you have a fixed basis from which to work off instead of it slipstream-updating while you work.  that way any parallel commits made to it while you're offline you can compare line by line if necessary.  

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	for small projects there'd be less overhead, but for large projects it'd be near impossible

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	when you are testing something, or can't risk production.  editing master directly is faster but riskier vs. slower but safer.  